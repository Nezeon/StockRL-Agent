version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: stockrl
      POSTGRES_PASSWORD: stockrl_password
      POSTGRES_DB: stockrl
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockrl"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://stockrl:stockrl_password@db:5432/stockrl
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DATA_MODE=${DATA_MODE:-demo}
      - DATA_PROVIDER=${DATA_PROVIDER:-mock}
      - DATA_FETCH_INTERVAL_SECONDS=${DATA_FETCH_INTERVAL_SECONDS:-60}
      - ALPHA_VANTAGE_KEY=${ALPHA_VANTAGE_KEY:-}
      - FINNHUB_KEY=${FINNHUB_KEY:-}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./backend/app:/app/app
      - ./backend/checkpoints:/app/checkpoints
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "alembic upgrade head && python /scripts/create_demo_user.py && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

volumes:
  postgres_data:
  redis_data:
